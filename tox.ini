[tox]
envlist = black, cover, flake8, pylint, safety

[tox:jenkins]
toxworkdir = /tmp/.tox

[testenv]
usedevelop = True
basepython = python3.8
setenv = VIRTUAL_ENV={envdir}
         PYTHONDONTWRITEBYTECODE = 1
deps =  -r{toxinidir}/requirements.txt
parallel_show_output = true

#######################################################################################
[testenv:black]
deps = black
skip_install = true
commands =
         black --check --diff src/


#######################################################################################
[testenv:cover]
deps =  {[testenv]deps}
        coverage[toml]
        -r{toxinidir}/requirements.txt
        -r{toxinidir}/requirements-test.txt
commands =
        nose2 -C --coverage src/tests
whitelist_externals = sh


#######################################################################################
[testenv:flake8]
deps = flake8
commands =
        flake8 src/


#######################################################################################
[testenv:pylint]
deps =  {[testenv]deps}
        -r{toxinidir}/requirements-test.txt
        pylint
commands =
    - pylint -E src


#######################################################################################
[testenv:safety]
setenv =
        LC_ALL=C.UTF-8
        LANG=C.UTF-8
deps =  {[testenv]deps}
        safety
commands =
        - safety check --full-report


#######################################################################################
[testenv:pip-compile]
deps =  pip-tools==6.6.2
skip_install = true
whitelist_externals = bash
        [
commands =
        - bash -c "for file in requirements*.in ; do \
        UNSAFE="" ; \
        if [[ $file =~ 'dist' ]] ; then UNSAFE='--allow-unsafe' ; fi ; \
        pip-compile -rU --no-header $UNSAFE $file ;\
        out=`echo $file | sed 's/.in/.txt/'` ; \
        sed -i -e '1 e head -16 tox.ini' $out ;\
        done"

